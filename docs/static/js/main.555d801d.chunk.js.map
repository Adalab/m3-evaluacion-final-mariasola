{"version":3,"sources":["images/rickandMortyLogo.png","components/Header.js","services/getDataFromApi.js","components/Character.js","components/CharacterList.js","components/Filters.js","components/Home.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["module","exports","Header","className","alt","src","rickandmortyLogo","formatCharacterItem","characterItem","id","name","status","species","origin","image","episode","getDataFromApi","fetch","then","response","json","character","results","map","Character","props","characters","CharacterList","key","to","Filters","handleFilter","type","onChange","Home","CharacterDetail","routerProps","characterId","parseInt","match","params","filter","item","Fragment","length","App","state","filterValue","bind","setState","event","newState","this","currentTarget","value","filteredCharacters","toLowerCase","includes","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.555d801d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rickandMortyLogo.15c5ace1.png\";","import React from \"react\";\nimport rickandmortyLogo from \"../images/rickandMortyLogo.png\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <img\n        className=\"header_img\"\n        alt=\"rick and morty logo\"\n        src={rickandmortyLogo}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","const formatCharacterItem = characterItem => {\n  return {\n    id: characterItem.id,\n    name: characterItem.name,\n    status: characterItem.status,\n    species: characterItem.species,\n    origin: characterItem.origin,\n    image: characterItem.image,\n    episode: characterItem.episode\n  };\n};\n\nconst getDataFromApi = () => {\n  return fetch(\n    `https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json`\n  )\n    .then(response => response.json())\n    .then(character => character.results.map(formatCharacterItem));\n};\n\nexport default getDataFromApi;\n","import React from \"react\";\n\nconst Character = props => {\n  return (\n    <div className=\"character\">\n      <img\n        className=\"character_img\"\n        alt=\"rick and morty character\"\n        src={props.characters.image}\n      />\n      <div className=\"character_info\">\n        <h2 className=\"character_info_name\">{props.characters.name}</h2>\n        <p className=\"character_info_model\">{props.characters.species}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Character;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Character from \"./Character\";\n\nconst CharacterList = props => {\n  const renderList = () => {\n    return props.characters.map(characters => {\n      return (\n        <li className=\"charctersList_li\" key={characters.id}>\n          <Link\n            to={`/character-detail/${characters.id}`}\n            className=\"charctersList_li_link\"\n          >\n            <Character characters={characters} />\n          </Link>\n        </li>\n      );\n    });\n  };\n  return <ul className=\"charctersList\">{renderList()}</ul>;\n};\n\nexport default CharacterList;\n","import React from \"react\";\n\nconst Filters = props => {\n  const { handleFilter } = props;\n  return (\n    <form className=\"filter\">\n      <label className=\"filter_label\">Who are you looking for?</label>\n      <input\n        type=\"text\"\n        onChange={handleFilter}\n        className=\"filter_input\"\n      ></input>\n    </form>\n  );\n};\n\nexport default Filters;\n","import React, { Fragment } from \"react\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\n\nconst Home = props => {\n  const { handleFilter, characters } = props;\n  return (\n    <Fragment>\n      <Filters handleFilter={handleFilter} />\n      <CharacterList characters={characters} />\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterDetail = props => {\n  const { routerProps, characters } = props;\n  const characterId = parseInt(routerProps.match.params.characterId);\n  const character = characters.filter(item => item.id === characterId);\n  if (character[0]) {\n    const { name, image, status, species, origin, episode } = character[0];\n\n    return (\n      <React.Fragment>\n        <div className=\"character_detail\">\n          <div className=\"character_detail_box\">\n            <img className=\"character_detail_box_img\" alt={name} src={image} />\n          </div>\n          <div className=\"character_detail_info\">\n            <h2 className=\"character_detail_info_name\">{name}</h2>\n            <p className=\"character_detail_info_status\">Status: {status}</p>\n            <p className=\"character_detail_info_species\">Species: {species}</p>\n            <p className=\"character_detail_info_species\">\n              Origin: {origin.name}\n            </p>\n            <p className=\"character_detail_info_episodes\">\n              Episodes: {episode.length}\n            </p>\n          </div>\n        </div>\n        <Link to=\"/\" className=\"app__back\">\n          &larr; Back to the list\n        </Link>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <p>Cargando...</p>\n        <Link to=\"/\" className=\"app__back\">\n          &larr; Back to the list\n        </Link>\n      </React.Fragment>\n    );\n  }\n};\nCharacterDetail.propTypes = {\n  routerProps: PropTypes.object.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CharacterDetail;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"../scss/App.scss\";\nimport Header from \"./Header\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport Home from \"./Home\";\nimport CharacterDetail from \"./CharacterDetail\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      filterValue: \"\"\n    };\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n  componentDidMount() {\n    getDataFromApi().then(characters => {\n      this.setState({ characters });\n    });\n  }\n  handleFilter(event) {\n    const newState = {\n      ...this.state,\n      filterValue: event.currentTarget.value\n    };\n    this.setState(newState);\n  }\n  render() {\n    const filteredCharacters = this.state.characters.filter(character =>\n      character.name\n        .toLowerCase()\n        .includes(this.state.filterValue.toLowerCase())\n    );\n    return (\n      <div className=\"page\">\n        <Header />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <Home\n                  handleFilter={this.handleFilter}\n                  characters={filteredCharacters}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/character-detail/:characterId\"\n            render={routerProps => {\n              return (\n                <CharacterDetail\n                  routerProps={routerProps}\n                  characters={filteredCharacters}\n                />\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}